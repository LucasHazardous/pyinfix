Infix = type('Infix', (object,), {'COVERED': ["or", "add", "sub", "mul", "matmul", "truediv", "floordiv", "mod", "lshift", "rshift", "and", "xor"], 'INITIALIZED': False, '__init__': lambda self, func: ((setattr(self, "func", func), (setattr(Infix, "INITIALIZED", True), exec("".join(f"def __r{operation}__(self, other):\n\treturn Infix(lambda var: self.func(other, var))\ndef __{operation}__(self, other):\n\treturn self.func(other)\n" for operation in Infix.COVERED), globals(), method_dict := {}), [setattr(self.__class__, method_name, method) for method_name, method in method_dict.items()]) if not Infix.INITIALIZED else None), None)[-1]})
